name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Build the application
        run: go build -o ${{ github.sha }} .

      - name: Install SSH Client
        run: sudo apt install -y ssh

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy the binary to the VM
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: scp -P 49048 -o StrictHostKeyChecking=no ${{ github.sha }} $VM_USER@$VM_HOST:~/yordamchi-api

      - name: Start new application version on alternate port
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          ssh -p 49048 -o StrictHostKeyChecking=no $VM_USER@$VM_HOST '
            cd ~/yordamchi-api
          
            chmod +x ${{ github.sha }}
            echo ${{ github.sha }} > new_binary_name.txt
          
            PID=$(cat pid.txt 2>/dev/null || echo 0)
            if ps -p "$PID" > /dev/null; then
              kill -TERM "$PID"
              sleep 10
            fi
          
            NEW_PORT=$((1024 + RANDOM % 64512))
            for _ in {1..10}; do
              if ! sudo lsof -i:$NEW_PORT; then
                break
              fi
              NEW_PORT=$((1024 + RANDOM % 64512))
            done
            echo $NEW_PORT > new_port.txt
          
            PORT=$(cat port.txt 2>/dev/null || echo 8000)
            sed -i "s/PORT=$PORT/PORT=$NEW_PORT/" .env
          
            nohup ./starter.sh ${{ github.sha }} &>> app.log &
            echo $! > pid.txt
          '

      - name: Switch Nginx to new version
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          ssh -p 49048 -o StrictHostKeyChecking=no $VM_USER@$VM_HOST '
            cd ~/yordamchi-api
          
            PORT=$(cat port.txt 2>/dev/null || echo 8000)
            NEW_PORT=$(cat new_port.txt)
          
            sudo sed -i "s/127.0.0.1:$PORT/127.0.0.1:$NEW_PORT/" /etc/nginx/nginx.conf
            sudo systemctl reload nginx
            mv new_port.txt port.txt
          '
